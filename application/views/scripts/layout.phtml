<?php
// Set page character encoding to Unicode.
$frontController = Zend_Controller_Front::getInstance();
$response        = $frontController->getResponse();
$charset         = $this->getEncoding();

$response->setHeader('Content-type', "text/html; charset=$charset");
$this->headMeta()->setCharset($charset);

// Set the page title.
$this->headTitle($this->pageTitle)
     ->headTitle('Society of St. Vincent de Paul')
     ->setSeparator(' - ');

// Use the main stylesheet.
$this->headLink()->prependStylesheet($this->baseUrl('main.css'), 'all');
$this->headLink()->prependStylesheet(
    'http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.19/themes/redmond/jquery-ui.css');

// Include jQuery libraries.
$this->headScript()->prependFile($this->baseUrl('main.js'));
$this->headScript()->prependFile($this->baseUrl('jquery.maskedinput-1.3.min.js'));
$this->headScript()->prependFile(
    'http://ajax.aspnetcdn.com/ajax/jquery.ui/1.8.19/jquery-ui.min.js');
$this->headScript()->prependFile('http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.7.2.min.js');

// Render <head> elements.
echo $this->doctype(),    "\n";
echo $this->headMeta(),   "\n";
echo $this->headTitle(),  "\n";
echo $this->headLink(),   "\n";
echo $this->headScript(), "\n";

// Fetch user role for later use.
$auth = Zend_Auth::getInstance();
$role = $auth->hasIdentity() ? $auth->getIdentity()->role : App_Roles::GENERAL;

// Fetch available funds for sidebar.
$config = Zend_Registry::get('config');
$funds  = App_Formatting::formatCurrency($config->getAvailableFunds());

// Fetch user schedule for sidebar.
$memberService   = new App_Service_Member();
$adminService    = new App_Service_AdminService();
$scheduleEntries = $memberService->getScheduleEntries();

foreach ($scheduleEntries as &$scheduleEntry) {
    // XXX: This is rather inefficient, and it breaks encapsulation by accessing controller-specific
    // service objects from the layout script. There really ought to be a layout service containing
    // a single DB-access method that retrieves all necessary schedule data in a single query.
    $scheduleEntry->setUser($adminService->getUserById($scheduleEntry->getUser()->getUserId()));
}
unset($scheduleEntry);
?>
<div class=row>
    <div class=span3>
        <a href="<?php echo $this->escape($this->baseUrl(''))?>">
            <img src="<?php echo $this->escape($this->baseUrl('svdp_logo.jpg'))?>" width="150" height="150" style="padding: 0" hspace="25" vspace="20">
        </a>
    </div>
    <div class=span10>
        <ul class=unstyled style="padding-top: 75px">
            <li><h1>St. Vincent de Paul</h1></li>
            <li><div class="nav nav-tabs nav-stacked"><?php echo $this->partial('partial/navigation.phtml', array('role' => $role)); ?></div></li>
        </ul>
    </div>
</div>

<div class=container-fluid>
    <div class=row-fluid>
        <div class=span2>
            <div class="well sidebar-nav">
                <ul class="nav nav-list">
                    <li class=nav-header>Current Funds</li>
                    <li style="text-indent:10px;"><?php echo $this->escape($funds); ?></li>

                    <li class="nav-header">Schedule</li>
                    <?php foreach ($scheduleEntries as $scheduleEntry) { ?>
                    <li><p style="width:200px;">Week of <?php echo $this->escape(App_Formatting::formatDate($scheduleEntry->getStartDate())); ?></p></li>
                    <li><p style="width:150px; text-indent:10px;"><?php echo $this->escape(App_Formatting::truncateString($scheduleEntry->getUser()->getFullName(), 18));?></p></li>
                    <?php } ?>

                </ul>
            </div><!--/.well -->
        </div><!--/span-->

        <div id=zendcontent class=span10>
            <div class=hero-unit>
                <div id=content>
                    <div id=alerts>
                    <?php
                        // Get any unread flash messages.
                        $flashMessenger = Zend_Controller_Action_HelperBroker::getStaticHelper('FlashMessenger');

                        if ($flashMessenger->hasCurrentMessages()) {
                            $messages = $flashMessenger->getCurrentMessages();
                            $flashMessenger->clearCurrentMessages();
                        } else {
                            $messages = $flashMessenger->getMessages();
                        }
                        foreach ($messages as $message) {
                            // Write each flash message as a top-level alert.
                            echo '<p class=alert>' . $this->escape($message) . '</p>';
                        }
                    ?>
                    </div>
                    <?php
                        // Write out page content specific to the current controller/action.
                        echo $this->layout()->content;
                    ?>
                </div>
            </div>
        </div><!--/span-->
    </div><!--/row-->

    <hr>

    <footer><p>&copy; Placeholder! 2048</p></footer>
</div>
